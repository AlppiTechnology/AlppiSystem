# Generated by Django 5.0.4 on 2024-05-01 14:30

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('pk_city', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('city_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'tb_city',
            },
        ),
        migrations.CreateModel(
            name='FederativeUnit',
            fields=[
                ('pk_fu', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('acronym', models.CharField(max_length=2)),
                ('fu_name', models.CharField(max_length=50)),
                ('fu_code', models.IntegerField()),
            ],
            options={
                'db_table': 'tb_federative_unit',
            },
        ),
        migrations.CreateModel(
            name='Campus',
            fields=[
                ('pk_campus', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('cnpj', models.CharField(max_length=14)),
                ('campus_code', models.IntegerField(unique=True)),
                ('campus_name', models.CharField(max_length=254)),
                ('trading_name', models.CharField(max_length=100)),
                ('company_name', models.CharField(max_length=100)),
                ('public_place', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=150)),
                ('phone', models.CharField(max_length=25)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('edited', models.DateTimeField()),
                ('status', models.IntegerField()),
                ('fk_city', models.ForeignKey(db_column='fk_city', on_delete=django.db.models.deletion.DO_NOTHING, to='register.city')),
                ('fk_fu', models.ForeignKey(db_column='fk_fu', on_delete=django.db.models.deletion.DO_NOTHING, to='register.federativeunit')),
            ],
            options={
                'db_table': 'tb_campus',
            },
        ),
        migrations.AddField(
            model_name='city',
            name='fk_fu',
            field=models.ForeignKey(db_column='fk_fu', on_delete=django.db.models.deletion.DO_NOTHING, to='register.federativeunit'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('pk_user', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('registration', models.CharField(max_length=6, unique=True)),
                ('cpf', models.CharField(max_length=14)),
                ('password', models.TextField()),
                ('username', models.CharField(max_length=254)),
                ('phone', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=50)),
                ('sex', models.CharField(max_length=1)),
                ('birth_date', models.DateField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('edited', models.DateTimeField()),
                ('is_superuser', models.BooleanField()),
                ('is_staff', models.BooleanField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('fk_campus', models.ForeignKey(db_column='fk_campus', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='register.campus')),
                ('fk_city', models.ForeignKey(db_column='fk_city', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='register.city')),
                ('fk_fu', models.ForeignKey(db_column='fk_fu', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='register.federativeunit')),
            ],
            options={
                'db_table': 'tb_user',
            },
        ),
    ]
